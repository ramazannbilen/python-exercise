"""Factorial of Factorials
Create a function that takes an integer n and returns the factorial of factorials. See below examples for a better understanding:

Examples
fact_of_fact(4) ➞ 288
# 4! * 3! * 2! * 1! = 288

fact_of_fact(5) ➞ 34560

fact_of_fact(6) ➞ 24883200
Notes
N/A"""

from edabit.Test import Test


def fact_of_fact(n):
    res = 1
    for i in range(1, (n + 1)):
        fact = 1
        for j in range(1, (i + 1)):
            fact *= j
        res *= fact
    return res

Test.assert_equals(fact_of_fact(4), 288),
Test.assert_equals(fact_of_fact(1), 1),
Test.assert_equals(fact_of_fact(5), 34560),
Test.assert_equals(fact_of_fact(2), 2),
Test.assert_equals(fact_of_fact(6), 24883200),
Test.assert_equals(fact_of_fact(3), 12),
Test.assert_equals(fact_of_fact(14), 69113789582492712943486800506462734562847413501952000000000000000),
Test.assert_equals(fact_of_fact(11), 265790267296391946810949632000000000),
Test.assert_equals(fact_of_fact(7), 125411328000),
Test.assert_equals(fact_of_fact(22),
                   73185187344722251685917129061596359994436879170423331597220791224873045503248922811481956548134913475324429128068839519292427638045690327208977109451014144000000000000000000000000000000000000000000),
Test.assert_equals(fact_of_fact(13), 792786697595796795607377086400871488552960000000000000),
Test.assert_equals(fact_of_fact(8), 5056584744960000),
Test.assert_equals(fact_of_fact(10), 6658606584104736522240000000),
Test.assert_equals(fact_of_fact(9), 1834933472251084800000),
Test.assert_equals(fact_of_fact(12), 127313963299399416749559771247411200000000000),
Test.assert_equals(fact_of_fact(15), 90378331112371142262979521568630736335023247731599748366336000000000000000000),
Test.assert_equals(fact_of_fact(16),
                   1890966832292234727042877370627225068196418587883634153182519380410368000000000000000000000),
Test.assert_equals(fact_of_fact(17),
                   672593129192865130334217631473916658864122332882577979675277211683839238972899328000000000000000000000000),
Test.assert_equals(fact_of_fact(18),
                   4306192564997715382115598640379294845786123319603755168023536027873932927153136831171640950784000000000000000000000000000),
Test.assert_equals(fact_of_fact(19),
                   523827226948912906162136183269887782788685420217963126789982275317725639664591791615428617583779071590924288000000000000000000000000000000),
Test.assert_equals(fact_of_fact(20),
                   1274420312381610764187232669591245728094053576480399681464607478621086015845192873311847341571189522511934190056991170232320000000000000000000000000000000000),
Test.assert_equals(fact_of_fact(21),
                   65111334482340755583337032079153276047018894694274871209973336023462275586396482041798135409436085152342597056410325664391109570976337100800000000000000000000000000000000000000),
